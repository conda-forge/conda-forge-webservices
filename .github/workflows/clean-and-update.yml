name: clean-and-update

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch: null
  issue_comment:

jobs:
  relock:
    name: relock
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          token: ${{ secrets.CF_ADMIN_GITHUB_TOKEN }}

      - name: relock
        id: relock
        uses: conda-incubator/relock-conda@7f346dc5b5acb46605a218779ebcc290608ee9c2
        with:
          github-token: ${{ secrets.CF_ADMIN_GITHUB_TOKEN }}
          automerge: true
          skip-if-pr-exists: true
          include-only-packages:
            anaconda-client
            conda
            conda-build
            conda-forge-ci-setup
            conda-forge-feedstock-ops
            conda-forge-tick
            conda-libmamba-solver
            conda-recipe-manager
            conda-smithy
            conda-souschef
            mamba
            rattler-build
            rattler-build-conda-compat
            pixi
            py-rattler

      - name: generate token
        id: generate_token
        if: github.event_name != 'issue_comment' && steps.relock.outputs.relocked == 'true'
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: conda-forge
          repositories: docker-images

      - name: re-enable conda-forge/docker-images workflow
        if: github.event_name != 'issue_comment' && steps.relock.outputs.relocked == 'true'
        shell: sh
        run: |
          gh api -X PUT "repos/conda-forge/docker-images/actions/workflows/ci.yaml/enable"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: rebuild conda-forge/docker-images
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
        if: github.event_name != 'issue_comment' && steps.relock.outputs.relocked == 'true'
        with:
          repo: conda-forge/docker-images
          workflow: ci.yaml
          token: ${{ steps.generate_token.outputs.token }}

  clean-and-cache:
    name: clean-and-cache
    runs-on: "ubuntu-latest"
    if: github.event_name != 'issue_comment'
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: setup conda
        uses: mamba-org/setup-micromamba@add3a49764cedee8ee24e82dfde87f5bc2914462
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        id: generate_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: clean cf-staging
        run: |
          python scripts/clean_cf_staging.py
        env:
          STAGING_BINSTAR_TOKEN: ${{ secrets.HEROKU_ONLY_STAGING_BINSTAR_TOKEN }}

      - name: cache status data
        run: |
          cache-status-data
        env:
          CF_WEBSERVICES_APP_ID: ${{ secrets.CF_CURATOR_APP_ID }}
          CF_WEBSERVICES_PRIVATE_KEY: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
