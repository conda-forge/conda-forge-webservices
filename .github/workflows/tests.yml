name: tests

on:
  workflow_dispatch: null
  # push:
  #   branches:
  #     - main
  merge_group: null
  pull_request: null

env:
  PY_COLORS: 1

defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.workflow }}-tests-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: setup conda
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        id: generate_token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        id: install-code
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run test suite
        run: |
          echo "owner: ${GITHUB_REPOSITORY_OWNER}"
          export CF_WEBSERVICES_TEST=1
          if [[ '${{ github.event.pull_request.head.repo.fork }}' == "true" ]]; then
            unset CF_WEBSERVICES_TOKEN
            unset CF_WEBSERVICES_APP_ID
            unset CF_WEBSERVICES_PRIVATE_KEY
            unset GH_TOKEN
            unset CF_WEBSERVICES_FEEDSTOCK_TOKEN
            unset CF_WEBSERVICES_FEEDSTOCK_APP_ID
          fi
          pytest -v conda_forge_webservices
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          PROD_BINSTAR_TOKEN: ${{ secrets.PROD_BINSTAR_TOKEN }}
          STAGING_BINSTAR_TOKEN: ${{ secrets.HEROKU_ONLY_STAGING_BINSTAR_TOKEN }}
          CF_WEBSERVICES_TOKEN: ${{ secrets.CF_WEBSERVICES_TOKEN }}
          CF_WEBSERVICES_APP_ID: ${{ secrets.CF_CURATOR_APP_ID }}
          CF_WEBSERVICES_PRIVATE_KEY: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          CF_WEBSERVICES_FEEDSTOCK_APP_ID: ${{ secrets.CF_CURATOR_APP_ID }}
          CF_WEBSERVICES_FEEDSTOCK_PRIVATE_KEY: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          ACTION_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}"

  docker-build:
    name: docker-build
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.workflow }}-docker-build-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: setup conda
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: install code
        id: install-code
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          pip install --no-deps --no-build-isolation -e .

          version=$(python -c "import conda_forge_webservices; print(conda_forge_webservices.__version__.replace('+', '.'))")
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: set up docker buildx
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/conda-forge-webservices'
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: login to docker hub
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/conda-forge-webservices'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: condaforgebot
          password: ${{ secrets.CF_BOT_DH_PASSWORD }}

      - name: build and push docker image
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/conda-forge-webservices'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v5
        with:
          context: .
          file: Dockerfile_wda
          push: true
          tags: condaforge/webservices-dispatch-action:${{ steps.install-code.outputs.version }}

  live-tests-upload:
    name: live-tests-upload
    runs-on: "ubuntu-latest"
    needs:
      - tests
    concurrency:
      group: ${{ github.event.pull_request.head.repo.fork != 'true' && 'live-tests-upload' || format('{0}-{1}', github.workflow, github.ref) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          fetch-depth: 0

      - name: setup conda
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run package upload tests
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          export CF_WEBSERVICES_TEST=1
          ./scripts/run_cfep13_tests.sh
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          PROD_BINSTAR_TOKEN: ${{ secrets.PROD_BINSTAR_TOKEN }}
          STAGING_BINSTAR_TOKEN: ${{ secrets.HEROKU_ONLY_STAGING_BINSTAR_TOKEN }}
          POST_STAGING_BINSTAR_TOKEN: ${{ secrets.POST_STAGING_BINSTAR_TOKEN }}
          CF_WEBSERVICES_TOKEN: ${{ secrets.CF_WEBSERVICES_TOKEN }}
          CF_WEBSERVICES_APP_ID: ${{ secrets.CF_CURATOR_APP_ID }}
          CF_WEBSERVICES_PRIVATE_KEY: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          ACTION_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}"

  live-tests-rerender:
    name: live-tests-rerender
    runs-on: "ubuntu-latest"
    needs:
      - tests
      - docker-build
    concurrency:
      group: ${{ github.event.pull_request.head.repo.fork != 'true' && 'live-tests-rerender' || format('{0}-{1}', github.workflow, github.ref) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          fetch-depth: 0

      - name: setup conda
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run rerender tests
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi

          version=$(python -c "import conda_forge_webservices; print(conda_forge_webservices.__version__.replace('+', '.'))")
          export CF_FEEDSTOCK_OPS_CONTAINER_NAME=condaforge/webservices-dispatch-action
          export CF_FEEDSTOCK_OPS_CONTAINER_TAG="${version}"

          cd tests
          pytest -vvs --branch=${branch} test_live_rerender.py
        env:
          GH_TOKEN: ${{ secrets.CF_ADMIN_GITHUB_TOKEN }}

  live-tests-linter:
    name: live-tests-linter
    runs-on: "ubuntu-latest"
    needs:
      - tests
      - docker-build
    concurrency:
      group: ${{ github.event.pull_request.head.repo.fork != 'true' && 'live-tests-linter' || format('{0}-{1}', github.workflow, github.ref) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          fetch-depth: 0

      - name: setup conda
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run linter tests
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi

          version=$(python -c "import conda_forge_webservices; print(conda_forge_webservices.__version__.replace('+', '.'))")
          export CF_FEEDSTOCK_OPS_CONTAINER_NAME=condaforge/webservices-dispatch-action
          export CF_FEEDSTOCK_OPS_CONTAINER_TAG="${version}"

          cd tests
          pytest -n 4 -vvs --branch=${branch} test_live_linter.py
        env:
          GH_TOKEN: ${{ secrets.CF_ADMIN_GITHUB_TOKEN }}

  live-tests-version-update:
    name: live-tests-version-update
    runs-on: "ubuntu-latest"
    needs:
      - tests
      - docker-build
    concurrency:
      group: ${{ github.event.pull_request.head.repo.fork != 'true' && 'live-tests-version-update' || format('{0}-{1}', github.workflow, github.ref) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          fetch-depth: 0

      - name: setup conda
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          mkdir -p ~/.conda-smithy/
          echo $GH_TOKEN > ~/.conda-smithy/github.token
          chmod 600 ~/.conda-smithy/github.token
          pip install --no-deps --no-build-isolation -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run version tests
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi

          version=$(python -c "import conda_forge_webservices; print(conda_forge_webservices.__version__.replace('+', '.'))")
          export CF_FEEDSTOCK_OPS_CONTAINER_NAME=condaforge/webservices-dispatch-action
          export CF_FEEDSTOCK_OPS_CONTAINER_TAG="${version}"

          cd tests
          pytest -vvs --branch=${branch} test_live_version_update.py
        env:
          GH_TOKEN: ${{ secrets.CF_ADMIN_GITHUB_TOKEN }}

  live-tests-automerge:
    name: live-tests-automerge
    runs-on: "ubuntu-latest"
    needs:
      - tests
    concurrency:
      group: ${{ github.event.pull_request.head.repo.fork != 'true' && 'live-tests-automerge' || format('{0}-{1}', github.workflow, github.ref) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          fetch-depth: 0

      - name: setup conda
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: generate token
        if: ${{ !github.event.pull_request.head.repo.fork }}
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: install code
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          pip install --no-deps --no-build-isolation -e .

      - name: run automerge tests
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi

          cd tests
          pytest -vvs --branch=${branch} test_live_automerge.py
        env:
          GHA_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
