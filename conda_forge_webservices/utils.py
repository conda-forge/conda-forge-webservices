import os
import shutil
import tempfile
from contextlib import contextmanager

ALLOWED_CMD_NON_FEEDSTOCKS = ["staged-recipes", "admin-requests"]


@contextmanager
def tmp_directory():
    tmp_dir = tempfile.mkdtemp("_recipe")
    yield tmp_dir
    shutil.rmtree(tmp_dir)


# https://stackoverflow.com/questions/6194499/pushd-through-os-system
@contextmanager
def pushd(new_dir):
    previous_dir = os.getcwd()
    os.chdir(new_dir)
    try:
        yield
    finally:
        os.chdir(previous_dir)


def parse_conda_pkg(pkg):
    """Parse a conda package into its parts.

    code due to Isuru F. and CJ Wright

    Returns platform, name, version and build string
    """
    if pkg.endswith(".tar.bz2"):
        pkg = pkg[: -len(".tar.bz2")]
    elif pkg.endswith(".conda"):
        pkg = pkg[: -len(".conda")]
    else:
        raise RuntimeError("Can only process packages that end in .tar.bz2 or .conda!")
    plat, pkg_name = pkg.split("/")
    name_ver, build = pkg_name.rsplit("-", 1)
    name, ver = name_ver.rsplit("-", 1)
    return plat, name, ver, build


def with_action_url(msg: str) -> str:
    action_url = os.getenv("ACTION_URL")
    if action_url:
        msg += f"\n\nGenerated by {action_url}"
    return msg
